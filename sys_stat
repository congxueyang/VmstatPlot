#!/usr/bin/python
#
# This simple tool will augment the output from vmstat with line counts from
# log files and network interface counters.
#
import os
import subprocess
import sys
import time


def cl(fd):
  fd.seek(fd.tell())
  return str(len(fd.readlines()))

def pad(title, data=None):
  return (' %%%ds' % len(title)) % ((data is None) and title or data)


class Vmstat(object):
  def __init__(self, args):

    self.logfiles = []
    while '-F' in args:
      idx = args.index('-F')
      lid, lname = args[idx+1].split(':')
      self.logfiles.append((lid, open(lname, 'r')))
      args[idx:idx+2] = []

    self.interfaces = []
    self.traffic = {}
    while '-I' in args:
      idx = args.index('-I')
      iface = args[idx+1]
      self.interfaces.append(iface)
      args[idx:idx+2] = []

    self.vmstat_cmd = ['vmstat']
    self.vmstat_cmd.extend(args)
    self.vmstat = subprocess.Popen(self.vmstat_cmd, bufsize=1, close_fds=True,
                                   stdout=subprocess.PIPE)

  def Traffic(self, iface):
    for line in open('/proc/net/dev', 'r'):
      if iface in line:
        data = line[line.index(':')+1:].split()
        rcvd, xmit = int(data[0]), int(data[8])
        if iface in self.traffic:
          orcv, oxmt = self.traffic.get(iface, (0, 0))
          self.traffic[iface] = (rcvd, xmit)
          return (rcvd-orcv, xmit-oxmt)
        else:
          self.traffic[iface] = (rcvd, xmit)
          return (0, 0)
    return (0, 0)

  def Run(self):
    line = 'first'
    while line:
      line = self.vmstat.stdout.readline().strip()
      if not line: break
      if '----' in line: continue

      line += pad(time.asctime())
      if 'swpd' in line:
        if self.logfiles:
          line += ' '.join([pad(l[0]) for l in self.logfiles])
        for iface in self.interfaces:
          line += pad('%s_i' % iface)
          line += pad('%s_o' % iface)
      else:
        if self.logfiles:
          line += ' '.join([pad(l[0], cl(l[1])) for l in self.logfiles])
        for iface in self.interfaces:
          r, w = self.Traffic(iface)
          line += pad('%s_i' % iface, r)
          line += pad('%s_o' % iface, w)

      sys.stdout.write('%s\n' % line)



if __name__ == '__main__':
  sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', 0)
  Vmstat(sys.argv[1:]).Run()

